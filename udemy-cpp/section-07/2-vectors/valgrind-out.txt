==20069== Memcheck, a memory error detector
==20069== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20069== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==20069== Command: ./vectors-challenge
==20069== Parent PID: 17947
==20069== 
--20069-- 
--20069-- Valgrind options:
--20069--    --leak-check=full
--20069--    --show-leak-kinds=all
--20069--    --track-origins=yes
--20069--    --verbose
--20069--    --log-file=valgrind-out.txt
--20069-- Contents of /proc/version:
--20069--   Linux version 5.10.192-tegra (buildbrain@mobile-u64-6519-d7000) (aarch64-buildroot-linux-gnu-gcc.br_real (Buildroot 2020.08) 9.3.0, GNU ld (GNU Binutils) 2.33.1) #1 SMP PREEMPT Mon Feb 19 20:19:53 PST 2024
--20069-- 
--20069-- Arch and hwcaps: ARM64, LittleEndian, baseline
--20069-- Page sizes: currently 4096, max supported 65536
--20069-- Valgrind library directory: /usr/lib/aarch64-linux-gnu/valgrind
--20069-- Reading syms from /home/nvidia/github/ryagi97/cpp-learning/udemy-cpp/section-07/2-vectors/vectors-challenge
--20069--    object doesn't have a symbol table
--20069-- Reading syms from /usr/lib/aarch64-linux-gnu/ld-2.31.so
--20069--   Considering /usr/lib/debug/.build-id/55/94c839a6444a801e7610b1ba8de0896218ed3c.debug ..
--20069--   .. build-id is valid
--20069-- Reading syms from /usr/lib/aarch64-linux-gnu/valgrind/memcheck-arm64-linux
--20069--    object doesn't have a symbol table
--20069--    object doesn't have a dynamic symbol table
--20069-- Scheduler: using generic scheduler lock implementation.
--20069-- Reading suppressions file: /usr/lib/aarch64-linux-gnu/valgrind/default.supp
==20069== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-20069-by-nvidia-on-???
==20069== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-20069-by-nvidia-on-???
==20069== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-20069-by-nvidia-on-???
==20069== 
==20069== TO CONTROL THIS PROCESS USING vgdb (which you probably
==20069== don't want to do, unless you know exactly what you're doing,
==20069== or are doing some strange experiment):
==20069==   /usr/lib/aarch64-linux-gnu/valgrind/../../bin/vgdb --pid=20069 ...command...
==20069== 
==20069== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==20069==   /path/to/gdb ./vectors-challenge
==20069== and then give GDB the following command
==20069==   target remote | /usr/lib/aarch64-linux-gnu/valgrind/../../bin/vgdb --pid=20069
==20069== --pid is optional if only one valgrind process is running
==20069== 
--20069-- REDIR: 0x4019400 (ld-linux-aarch64.so.1:strlen) redirected to 0x580c5de8 (???)
--20069-- REDIR: 0x4018440 (ld-linux-aarch64.so.1:strcmp) redirected to 0x580c5e3c (???)
--20069-- REDIR: 0x4018330 (ld-linux-aarch64.so.1:index) redirected to 0x580c5e10 (???)
--20069-- Reading syms from /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_core-arm64-linux.so
--20069--    object doesn't have a symbol table
--20069-- Reading syms from /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so
--20069--    object doesn't have a symbol table
--20069-- Reading syms from /usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28
--20069--    object doesn't have a symbol table
--20069-- Reading syms from /usr/lib/aarch64-linux-gnu/libm-2.31.so
--20069--   Considering /usr/lib/debug/.build-id/db/1be0d702106fcd7cf5035d13554c4f950e7abd.debug ..
--20069--   .. build-id is valid
--20069-- Reading syms from /usr/lib/aarch64-linux-gnu/libgcc_s.so.1
--20069--    object doesn't have a symbol table
--20069-- Reading syms from /usr/lib/aarch64-linux-gnu/libc-2.31.so
--20069--   Considering /usr/lib/debug/.build-id/12/7e5908798b8d0ccc04f49933af3bef807f9e65.debug ..
--20069--   .. build-id is valid
--20069-- REDIR: 0x4bbbab0 (libc.so.6:memchr) redirected to 0x48346c8 (_vgnU_ifunc_wrapper)
--20069-- REDIR: 0x4bba8d8 (libc.so.6:strlen) redirected to 0x48346c8 (_vgnU_ifunc_wrapper)
--20069-- REDIR: 0x4bbad40 (libc.so.6:rindex) redirected to 0x484cc40 (rindex)
--20069-- REDIR: 0x4bb6420 (libc.so.6:malloc) redirected to 0x4849d18 (malloc)
--20069-- REDIR: 0x4bbbda0 (libc.so.6:memset) redirected to 0x48346c8 (_vgnU_ifunc_wrapper)
--20069-- REDIR: 0x4bc2f40 (libc.so.6:__GI_memset) redirected to 0x4850c50 (memset)
--20069-- REDIR: 0x4bc3680 (libc.so.6:__GI_strlen) redirected to 0x484d268 (__GI_strlen)
--20069-- REDIR: 0x4bbbb00 (libc.so.6:bcmp) redirected to 0x48504d8 (bcmp)
--20069-- REDIR: 0x4bba100 (libc.so.6:strcmp) redirected to 0x484e278 (strcmp)
--20069-- REDIR: 0x4928b30 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x484a350 (operator new(unsigned long))
--20069-- REDIR: 0x4bbbc90 (libc.so.6:memmove) redirected to 0x48346c8 (_vgnU_ifunc_wrapper)
--20069-- REDIR: 0x4bc1dc0 (libc.so.6:__GI_memmove) redirected to 0x4851058 (__GI_memmove)
--20069-- REDIR: 0x4926950 (libstdc++.so.6:operator delete(void*)) redirected to 0x484b3b0 (operator delete(void*))
--20069-- REDIR: 0x4bbc390 (libc.so.6:memcpy) redirected to 0x48346c8 (_vgnU_ifunc_wrapper)
--20069-- REDIR: 0x4bc1dd0 (libc.so.6:__GI_memcpy) redirected to 0x484efb0 (__GI_memcpy)
--20069-- REDIR: 0x4bbbe60 (libc.so.6:mempcpy) redirected to 0x4851890 (mempcpy)
--20069-- REDIR: 0x4bb6a08 (libc.so.6:free) redirected to 0x484aeb0 (free)
==20069== 
==20069== HEAP SUMMARY:
==20069==     in use at exit: 0 bytes in 0 blocks
==20069==   total heap usage: 10 allocs, 10 frees, 73,840 bytes allocated
==20069== 
==20069== All heap blocks were freed -- no leaks are possible
==20069== 
==20069== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
